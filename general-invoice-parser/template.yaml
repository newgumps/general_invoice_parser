AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.8

  Sample SAM Template for General Invoice

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  EmailPrefix:
    Type: String
    Default: "Received"
  PDFPrefix:
    Type: String
    Default: "PDF"
  NSSecrets:
    Type: String
    Default: winward-invoice-pdf-to-csv-upload-to-ns/key-secrets
  NSFileCabinetIdPDFUploadFolder:
    Type: String
    Default: '838'
  NSFileCabinetIdCSVUploadFolder:
    Type: String
    Default: '634'
  NSSandboxProductionMode:
    Type: String
    Default: 'PRODUCTION'
  GumpsLoggingDDB:
    Type: String
    Default: GumpsStacksLog
  PreProcessingBucket:
    Type: String
    Default: preprocessing-bucket-to-be-parsed

  AttachmentsDDBStreams:
    Type: String
    Default: arn:aws:dynamodb:us-east-1:570685116845:table/Attachment-iumxb4tvivfkpokn5l7ot2wd64-staging/stream/2022-12-14T17:42:52.072

Resources:
  InvoiceParserStackLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: GeneralCsvParserLog

  ReceivedEmailStorage:
    Type: 'AWS::S3::Bucket'

  AttachmentsStorage:
    Type: 'AWS::S3::Bucket'

  SavedInS3Notification:
    Type: 'AWS::SNS::Topic'

  SavedInS3NotificationPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties: 
      Topics: 
        - !Ref SavedInS3Notification
      PolicyDocument:
        { "Version": "2008-10-17",
              "Id": "__default_policy_ID",
              "Statement": [
                {
                  "Sid": "__default_statement_ID",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ses.amazonaws.com"
                  },
                  "Action": "SNS:Publish",
                  "Resource": [{"Ref": SavedInS3Notification}],
                }
              ]
            }


  SavedInS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref "ReceivedEmailStorage"
      PolicyDocument:
        { "Version": "2008-10-17",
              "Id": "__default_policy_ID",
              "Statement": [
                {
                  "Sid": "__default_statement_ID",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ses.amazonaws.com"
                  },
                  "Action": "s3:PutObject",
                  "Resource": {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:s3:::",
                                    {
                                        "Ref": "ReceivedEmailStorage"
                                    },
                                    "/*"
                                ]
                            ]
                        },
                }
              ]
            }



  ErrorNotificationSNS:
    Type: 'AWS::SNS::Topic'
    Properties: 
      DisplayName: 'Gumps Dropship PDF Error'
  
  SuccessNotificationSNS:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: 'Gumps Dropship PDF Success'

  SavedPdfPreProcessing:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref PreProcessingBucket

  PdfFileHandel:
    Type: 'AWS::S3::Bucket'

  ProcessedCSVFileHandel:
    Type: 'AWS::S3::Bucket'

  ExtractAttachmentsFromEmail:
    Type: AWS::Serverless::Function 
    Properties:
      Timeout: 20
      PackageType: Image
      Architectures:
        - "arm64"
      Environment:
        Variables: 
          BUCKET : !Ref ReceivedEmailStorage
          SAVE_PDF_PREFIX: !Ref PDFPrefix
          ERROR_NOTIFICATION_ARN: !Ref ErrorNotificationSNS
          CSV_SQS_QUEUE: !Ref PDFSplitQueueSQS
          PREPROCESSING_BUCKET: !Ref PreProcessingBucket
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref SavedInS3Notification
      Policies: 
        - S3CrudPolicy:
            BucketName: !Ref SavedPdfPreProcessing
        - SNSCrudPolicy:
            TopicName: !GetAtt SavedInS3Notification.TopicName
        - S3CrudPolicy:
            BucketName: !Ref ReceivedEmailStorage
        - SNSCrudPolicy:
            TopicName: !GetAtt ErrorNotificationSNS.TopicName
        - DynamoDBWritePolicy:
            TableName: !Ref GumpsLoggingDDB
        - SQSSendMessagePolicy:
            QueueName: !GetAtt PDFSplitQueueSQS.QueueName
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS

    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./EmailToPdf
      DockerTag: python3.8-v1
  
  PDFSplitQueueSQS: 
    Type: AWS::SQS::Queue
    Properties: 
      FifoQueue: True
      VisibilityTimeout: 120
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt PDFDeadLetterQueueSQS.Arn
        maxReceiveCount: 3
      ContentBasedDeduplication: True
      
  
  PDFDeadLetterQueueSQS: 
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True

  CSVCompileQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt CSVDeadLetterQueueSQS.Arn
        maxReceiveCount: 3
  
  CSVDeadLetterQueueSQS:
    Type: AWS::SQS::Queue

  ErrorStorageBucket:
    Type: 'AWS::S3::Bucket'
  ParsePDFFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Timeout: 80
      PackageType: Image
      Architectures:
        - "arm64"
      Events:
        S3Events:
          Type: S3
          Properties:
            Bucket: !Ref SavedPdfPreProcessing
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: pre-processing-bucket/
                  - Name: suffix
                    Value: .pdf
      Policies:
        - {
        
            "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                  "textract:*"
                ],
                "Resource": "*"
              }
            ]
          }
        - DynamoDBCrudPolicy:
            TableName: "general-invoice-data"
        - DynamoDBWritePolicy:
            TableName: !Ref GumpsLoggingDDB
        - S3CrudPolicy:
            BucketName: !Ref ReceivedEmailStorage
        - S3CrudPolicy:
            BucketName: !Ref ErrorStorageBucket
        - S3CrudPolicy:
            BucketName: !Ref PreProcessingBucket
        - S3CrudPolicy:
            BucketName: !Ref PdfFileHandel
        - S3CrudPolicy:
            BucketName: !Ref ProcessedCSVFileHandel
        - SQSSendMessagePolicy:
            QueueName: !GetAtt CSVCompileQueue.QueueName
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ErrorNotificationSNS.TopicName
        - {
            "Version": "2012-10-17",
            "Statement": [
                {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": [
                                "ssm:DescribeParameters",
                                "ssm:GetParametersByPath",
                                "ssm:GetParameters",
                                "ssm:GetParameter"
                            ],
                            "Resource": "*"
                        }
                    ]
            }

      Environment:
        Variables:
          PDF_FILE_HANDLE_BUCKET: !Ref PdfFileHandel
          PROCESSED_CSV_FILE_HANDLE_BUCKET: !Ref ProcessedCSVFileHandel
          NSSecrets: !Ref NSSecrets
          BUCKET_NAME_ERRORS: !Ref ErrorStorageBucket
          CSV_SQS_QUEUE: !Ref CSVCompileQueue
          ERROR_NOTIFICATION_ARN: !Ref ErrorNotificationSNS
          UPLOAD_PDF_FOLDER_INTERNAL_ID: !Ref NSFileCabinetIdPDFUploadFolder
          UPLOAD_CSV_FOLDER_INTERNAL_ID: !Ref NSFileCabinetIdCSVUploadFolder
          NSSandboxProductionMode: !Ref NSSandboxProductionMode
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./PdfParser
      DockerTag: python3.8-v1      
  
  CsvCompileFunction:
    Type: AWS::Serverless::Function
    
    Properties:
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SuccessNotificationSNS.TopicName
        - {
            "Version": "2012-10-17",
            "Statement": [
                {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": [
                                "ssm:DescribeParameters",
                                "ssm:GetParametersByPath",
                                "ssm:GetParameters",
                                "ssm:GetParameter"
                            ],
                            "Resource": "*"
                        }
                    ]
            }
      Timeout: 30
      Environment:
        Variables:
          NSSecrets: !Ref NSSecrets
          CSV_SQS_QUEUE: !Ref CSVCompileQueue
          SUCCESS_SNS_TOPIC: !Ref SuccessNotificationSNS
          UPLOAD_PDF_FOLDER_INTERNAL_ID: !Ref NSFileCabinetIdPDFUploadFolder
          UPLOAD_CSV_FOLDER_INTERNAL_ID: !Ref NSFileCabinetIdCSVUploadFolder
          NSSandboxProductionMode: !Ref NSSandboxProductionMode
      PackageType: Image
      Architectures:
        - arm64
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt CSVCompileQueue.Arn
            BatchSize: 45
            MaximumBatchingWindowInSeconds: 300

    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./CsvCompiler
      DockerTag: python3.8-v1

  GumpsDocumentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: GumpsDocuments
      AttributeDefinitions:
        # The primary key of a DynamoDB table is a combination of a partition key and a sort key.
        - AttributeName: vendors
          AttributeType: S
        - AttributeName: invoice_number
          AttributeType: S
        - AttributeName: invoice_date
          AttributeType: S
        - AttributeName: po_number
          AttributeType: S


      KeySchema:
        - AttributeName: vendors
          KeyType: HASH
        - AttributeName: invoice_number
          KeyType: RANGE

      GlobalSecondaryIndexes:
        -
          IndexName: po-index
          KeySchema:
            - AttributeName: po_number
              KeyType: HASH
            - AttributeName: invoice_date
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - s3_link

      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
  
  EmailParsingFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies: 
        - SNSCrudPolicy:
            TopicName: !GetAtt SavedInS3Notification.TopicName
        - S3CrudPolicy:
            BucketName: !Ref ReceivedEmailStorage
        - S3CrudPolicy:
            BucketName: !Ref AttachmentsStorage
        - DynamoDBCrudPolicy:
            TableName: "general-invoice-data"
        - {

          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudwatch:PutMetricData"
              ],
              "Resource": "*"
            }
          ]
          
            }     
        - {
            "Version": "2012-10-17",
            "Statement": [
                {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": [
                                "ssm:DescribeParameters",
                                "ssm:GetParametersByPath",
                                "ssm:GetParameters",
                                "ssm:GetParameter"
                            ],
                            "Resource": "*"
                        }
                    ]
            }
      Timeout: 30
      Environment:
        Variables:
          ATTACHMENTS_BUCKET: !Ref AttachmentsStorage
      PackageType: Image
      Architectures:
        - arm64
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref SavedInS3Notification
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./extract_pdf_attachments
      DockerTag: python3.8-v1
  
  PDFPagesStorage:
    Type: 'AWS::S3::Bucket'
    
  SplitPdfFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies: 
        - AWSLambdaDynamoDBExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref AttachmentsStorage
        - S3CrudPolicy:
            BucketName: !Ref PDFPagesStorage
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessWithTextractFunction
      Timeout: 30
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !Ref AttachmentsDDBStreams
            BatchSize: 1
            StartingPosition: LATEST
            FilterCriteria:
              Filters:
                - Pattern: '{ "dynamodb": { "NewImage": { "type": { "S": ["application/pdf"] } } } }'
      PackageType: Image
      Architectures:
        - arm64
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./split_pdf
      DockerTag: python3.8-v1

  SavePdfPagesTopic:
    Type: AWS::SNS::Topic
  ProcessWithTextractFunction:
    Type: AWS::Serverless::Function
    Properties:

      Policies: 
        - S3CrudPolicy:
            BucketName: !Ref PDFPagesStorage
        - SNSCrudPolicy:
            TopicName: !GetAtt  SavePdfPagesTopic.TopicName
      PackageType: Image
      Architectures:
        - arm64
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./process_with_textract
      DockerTag: python3.8-v1